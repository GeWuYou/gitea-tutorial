version: "3.8" # 如果你使用的是最新版本的docker compose 请删除此行

services:
  gitea:
    image: gitea/gitea:latest  # 使用官方 Gitea 最新版本镜像
    container_name: gitea      # 容器的名字，方便识别

    environment:               # 设置环境变量，配置 Gitea 启动参数
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres     # 使用 PostgreSQL 作为数据库
      - GITEA__database__HOST=gitea-db:5432   # 数据库主机地址和端口（指向下面的服务）
      - GITEA__database__NAME=gitea           # 数据库名称
      - GITEA__database__USER=gitea           # 数据库用户名
      - GITEA__database__PASSWD=s1tGsUUMAWLq      # 建议强密码

    restart: unless-stopped    # 容器在非正常退出时自动重启，除非手动停止

    volumes:                  # 将主机目录挂载到容器内部，实现数据持久化
      - ./data/gitea:/data         # Gitea 核心数据（仓库、用户文件等）
      - ./config/gitea:/etc/gitea  # Gitea 配置文件（如 app.ini）
      - /etc/timezone:/etc/timezone:ro    # 共享主机时区配置，只读挂载
      - /etc/localtime:/etc/localtime:ro  # 共享主机时间设置，只读挂载

    ports:                    # 端口映射，主机 → 容器
      - "3001:3000"           # 网页 UI：主机 3001 映射容器 3000
      - "2222:22"             # SSH 访问：主机 2222 映射容器 22

    depends_on:              # 定义依赖关系，确保数据库先启动并健康后再启动 Gitea
      gitea-db:
        condition: service_healthy
  gitea-db:
    image: postgres:latest    # 使用最新 PostgreSQL 镜像
    container_name: gitea_db  # 容器名称
    environment:              # 设置 PostgreSQL 的初始化参数
      - POSTGRES_USER=gitea          # 初始化数据库用户
      - POSTGRES_PASSWORD=s1tGsUUMAWLq  # 建议强密码
    volumes:
      - ./pgdata:/var/lib/postgresql/data  # 本地目录挂载到容器内数据目录
    healthcheck:              # 健康检查配置，确保数据库已准备好
      test: ["CMD-SHELL", "pg_isready -U gitea"]  # 测试数据库是否可连接
      interval: 5s            # 每 5 秒执行一次检查
      timeout: 5s             # 检查超时时间 5 秒
      retries: 5              # 连续 5 次失败视为不健康
    restart: unless-stopped    # 容器在非正常退出时自动重启，除非手动停止